import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { API_URL } from '../utils/paths';
import { IInvoice } from '../utils/types';

import { Layout, Space, Button, Input, Typography, Row, Col, Divider, Modal } from 'antd';
import InvoiceCard from '../components/invoice-card';
import AddInvoiceModal from '../components/add-invoice-modal';

const { Header, Footer, Sider, Content } = Layout;
const { Title } = Typography;

const Home: NextPage<IProps> = ({api}) => {
  const [test, setTest] = useState<IInvoice[]>([]);
  const [count, setCount] = useState(1);
  const [addModalVisible, setAddModalVisible] = useState(false);

  const doQuery = (count: number) => {
    fetch(`http://${api}/v1/invoices?count=${count}`)
      .then(res => res.json())
      .then(json => {
        console.info(json);
        setTest(json)
      })
      .catch(err => console.error(err))
  }

  useEffect(() => {
    doQuery(1);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>
          <Space>
            <Title style={{color: 'white'}}>
              { `Invoice - ${api}` }
            </Title>
          </Space>
        </Header>
        <Content style={{marginTop: 64}}>
          <Layout style={{marginTop: '1rem', marginLeft: '1rem', marginRight: '1rem'}}>
            <Space>
              <Input 
                type="number" 
                value={count}
                onChange={e => setCount(e.currentTarget.valueAsNumber)}
              />
              <Button
                type="primary"
                onClick={() => doQuery(count)}
              >
                Get Invoices
              </Button>
              <Button
                type="default"
                onClick={() => setAddModalVisible(true)}
              >
                Add Invoice
              </Button>
            </Space>
          </Layout>
          <Divider />
          <div style={{marginLeft: '1rem', marginRight: '1rem', minHeight: '100vh'}}>
            <Row justify="space-between" gutter={[12, 12]}>
                {
                  test.map(t => (
                    <Col key={t.id || 0 + Math.random()} md={8} sm={16}>
                      <InvoiceCard invoice={t}/>
                    </Col>
                  ))
                }
            </Row>
          </div>
          <AddInvoiceModal api={api} visible={addModalVisible} setHidden={setAddModalVisible}/>
        </Content>
      </Layout>
    </>
  )
}

interface IProps {
  api: string,
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  return {
    props: {
      api: API_URL
    }
  }
}

export default Home
